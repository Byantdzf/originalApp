<template>
  <view class="kai-content">
    <view class="padding-10 font-12">基础用法</view>
    <view style="background-color: #fff;">
    	{{base.name.label}}
	    <inputName :label.sync="name.label" :placeholder.sync="name.placeholder"></inputName>
    </view>
    <!-- <button @tap="save">保存</button> -->
  </view>
</template>

<script>
  import wepy from 'wepy'
  import Input from '@/components/field/index'

  export default class Field extends wepy.page {
    config = {
      navigationBarTitleText: 'Input 输入框'
    }

    data = {
    	name: {
	      label: '收货人',
	      placeholder: '名字'
	    },
      base: {
		    name: {
		      label: '收货人',
		      placeholder: '名字'
		    },
		    tel: {
		      error: true,
		      label: '联系电话',
		      inputType: 'number',
		      placeholder: '请输入手机号'
		    },
		    address: {
		      label: '详细地址',
		      type: 'textarea',
		      placeholder: '请输入详细地址'
		    }
		  },
		  // 无标题输入框
		  notitle: {
		    placeholder: '请输入收货人姓名',
		    componentId: 'textarea:test'
		  },
		  // 圆角输入框
		  radius: {
		    totalPrice: {
		      right: true,
		      mode: 'wrapped',
		      label: '消费总额',
		      inputType: 'number',
		      placeholder: '询问收银员后输入'
		    },
		    excludePrice: {
		      right: true,
		      error: true,
		      mode: 'wrapped',
		      label: '不参与优惠金额',
		      inputType: 'number',
		      placeholder: '询问收银员后输入'
		    },
		    notitle: {
		      mode: 'wrapped',
		      inputType: 'number',
		      placeholder: '请输入消费金额'
		    }
		  },
		  // Form 中使用输入框
		  form: {
		    name: {
		      placeholder: '请输入收货人姓名',
		      componentId: 'form:test:name'
		    },
		    tel: {
		      name: 'tel',
		      inputType: 'tel',
		      placeholder: '请输入收货人手机号码',
		      componentId: 'form:test:tel'
		    }
		  }
    }
    components = {
      inputName: Input,
      inputAddress: Input,
      inputPassword: Input,
      inputPhone: Input
    }
    methods = {
      save () {
        console.log(this.name, this.password, this.tel, this.address)
      }
    }
    events = {
      handleChange(e) {
        console.log('handleChange', e)
      },
      handleInput(e) {
        console.log('handleInput', e)
      },
      handleBlur(e) {
        console.log('handleBlur', e)
      }
    }
    onLoad () {
    	console.log(this.base)
    }
  }
</script>
