<template>
  <view class="kai-content">
    <toast />
    <view class="padding-10" style="margin-top: 40px;">
      <button @tap="showSuccess('loading', '加载中的提示')" class="btn btn-kai">加载中</button>
    </view>
    <view class="padding-10">
      <button @tap="showSuccess('success', '成功的提示')" class="btn btn-kai">成功</button>
    </view>
    <view class="padding-10">
      <button @tap="showSuccess('error', '失败的提示')" class="btn btn-kai">失败</button>
    </view>
    <view class="padding-10">
      <button @tap="showSuccess('warning', '警告的提示')" class="btn btn-kai">警告</button>
    </view>
    <view class="padding-10">
      <button @tap="showSuccess('', '纯文本的提示')" class="btn btn-kai">纯文本</button>
    </view>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import Toast from '@/components/toast/index'

  export default class ToastPage extends wepy.page {
    config = {
      navigationBarTitleText: 'Toast 轻提示'
    }
    data = {}

    components = {
      toast: Toast
    }

    methods = {
      showSuccess (type, msg) {
        const options = {
          content: msg,
          position: 'middle',
          duration: 2000,
          type: type,
          afterClose: 'afterClose'
        }
        this.$invoke('toast', 'show', options)
      }
    }

    events = {
      afterClose () {
        console.log('这是提示关闭后的回调函数')
      }
    }
  }
</script>
