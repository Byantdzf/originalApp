<style lang="less">
.scroll-view {
  height: 400px;
  .item {
    line-height: 40px;
    background: #ccc;
    color: #fff;
    border-bottom: 1px solid #e1e1e1;
  }
}
</style>
<template>
  <view class="kai-content">
    <loadmore1 :more.sync="more1"></loadmore1>
    <loadmore2 :more.sync="more2"></loadmore2>
    <view>案例</view>
    <scroll-view class="scroll-view" scroll-y scroll-with-animation="{{true}}" bindscrolltolower="lower">
      <repeat for="{{listShow}}" index="index" item="item" key="{{index}}">
        <view class="item">{{item}}</view>
      </repeat>
      <loadmore :more.sync="more"></loadmore>
    </scroll-view>
  </view>
</template>

<script>
import wepy from 'wepy'
import loadmore from '@/components/loadmore/index'

export default class Loadmore extends wepy.page {
  config = {
    navigationBarTitleText: 'loadmore'
  }

  components = {
    loadmore: loadmore,
    loadmore1: loadmore,
    loadmore2: loadmore
  }

  data = {
    list: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25],
    listShow: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10],
    page: 0,
    pagesize: 10,
    more: true,
    more1: true,
    more2: false
  }

  computed = {}

  methods = {
  }

  lower () {
    const len = this.list.length
    const hasMore = len > this.listShow.length
    if (hasMore) {
      this.page++
      const { page, pagesize } = this
      const start = page * pagesize
      const end = (page + 1) * pagesize > len ? len : (page + 1) * pagesize
      const newdata = this.list.slice(start, end)
      console.log(start, end, newdata)
      this.listShow = this.listShow.concat(newdata)
    }
    this.more = hasMore
    this.$apply()
  }

  events = {
  }

  onLoad() {
  }
}
</script>
